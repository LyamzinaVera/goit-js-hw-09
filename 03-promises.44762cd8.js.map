{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAGtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAGrDA,EAAM,G,CAqBbL,EAAKa,iBAAiB,UAEtB,SAAmBC,GACjBA,EAAIC,iBACJ,MAAMV,EAAQL,EAAKK,MAAMW,MACnBC,EAAOjB,EAAKiB,KAAKD,MACjBE,EAASlB,EAAKkB,OAAOF,OArB7B,SAAqBX,EAAOY,EAAMC,GAChC,IAAId,EAAW,EACf,IAAK,IAAIe,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/Bf,GAAY,EACZD,EAAcC,EAAUC,GACrBe,MAAKb,IACJc,EAAAvB,GAASwB,OAAOC,QAAQhB,EAAQ,IAEjCiB,OAAMhB,IACLa,EAAAvB,GAASwB,OAAOG,QAAQjB,EAAO,IAEnCH,EAAQqB,OAAOrB,GAASqB,OAAOT,E,EAWjCU,CAAYtB,EAAOY,EAAMC,GACzBJ,EAAIc,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\"\n\nconst form = document.querySelector('.form')\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`)\n      }\n\n    }, delay);\n\n  });\n\n}\n\nfunction showPromise(delay, step, amount) {\n  let position = 0;\n  for (let i = 0; i < amount; i += 1) {\n    position += 1;\n    createPromise(position, delay)\n      .then(resolve => {\n        Notiflix.Notify.success(resolve);\n      })\n      .catch(reject => {\n        Notiflix.Notify.failure(reject);\n      });\n    delay = Number(delay) + Number(step);\n  }\n}\n\nform.addEventListener('submit', submitBtn);\n\nfunction submitBtn(evt) {\n  evt.preventDefault();\n  const delay = form.delay.value;\n  const step = form.step.value;\n  const amount = form.amount.value;\n  showPromise(delay, step, amount);\n  evt.currentTarget.reset();\n}\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","Number","$47d4ff9957288465$var$showPromise","currentTarget","reset"],"version":3,"file":"03-promises.44762cd8.js.map"}